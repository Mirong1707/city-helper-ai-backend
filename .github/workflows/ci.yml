name: CI

on:
  push:
    branches: [main, master, develop]
  pull_request:
    branches: [main, master, develop]
  workflow_dispatch:

jobs:
  lint:
    name: Lint & Format Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Ruff linter
        run: ruff check app/

      - name: Run Ruff formatter check
        run: ruff format --check app/

  pre-commit:
    name: Pre-commit Hooks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          cache: "pip"

      - name: Install pre-commit
        run: pip install pre-commit

      - name: Cache pre-commit hooks
        uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}

      - name: Run pre-commit
        run: pre-commit run --all-files --show-diff-on-failure

  security:
    name: Security Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install security tools
        run: |
          pip install bandit[toml] safety

      - name: Run Bandit (security linter)
        run: bandit -r app/ -f json -o bandit-report.json || true

      - name: Run Safety (dependency vulnerability check)
        run: safety check --json || true

      - name: Upload security reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-reports
          path: |
            bandit-report.json

  build:
    name: Build & Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12", "3.13"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Check imports
        run: python -c "from app.main import app; print('✅ Application imports successful')"

      - name: Start server (smoke test)
        run: |
          timeout 10s python run.py || code=$?
          if [ $code -eq 124 ]; then
            echo "✅ Server started successfully (timeout as expected)"
            exit 0
          else
            echo "❌ Server failed to start"
            exit 1
          fi

  # Uncomment when tests are added
  # test:
  #   name: Run Tests
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #
  #     - name: Set up Python
  #       uses: actions/setup-python@v5
  #       with:
  #         python-version: "3.13"
  #         cache: "pip"
  #
  #     - name: Install dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install -r requirements.txt
  #         pip install pytest pytest-asyncio pytest-cov httpx
  #
  #     - name: Run tests with coverage
  #       run: pytest --cov=app --cov-report=xml --cov-report=html
  #
  #     - name: Upload coverage to Codecov
  #       uses: codecov/codecov-action@v4
  #       with:
  #         file: ./coverage.xml
  #         fail_ci_if_error: false
